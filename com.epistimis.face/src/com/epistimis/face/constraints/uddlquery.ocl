/**
 * UDDL Query Language - Epistimis extensions outside of the FACE spec
 */

import query : 'platform:/plugin/com.epistimis.uddl.query/model/generated/Query.ecore'


/**
 * TODO: As long as uddl has a dependency on uddl.query (which it does as of 2023-01-01), 
 * then query constraints cannot have a dependency on uddl (circular dependency problem).
 *  So we can only provide helper methods that uddl or face ocl can use. Hence, this is in the FACE set of 
 * constraints since it will be used by FACE
 */
 
package query

  context QueryStatement
  	    /*
	     * Helper method that drills down through the query to get the entity type name
	     */
	    def: referencedEntityTypeName() : String =
	        self.selectedEntityExpression.from.entity.selectedEntity.entityType.oclAsType(QueryIdentifier).id
  
  context SelectedEntityExpression
	    def: referencedEntityTypeName() : String =
	        self.from.entity.selectedEntity.entityType.oclAsType(QueryIdentifier).id
  
 
  context SelectedEntity
		/**
		 * 
		 */
	    def: referencedEntityTypeName() : String =
	        self.entityType.oclAsType(QueryIdentifier).id
  
  		/**
  		 * This will return all type names. Will it only do that for a single query? 
  		 */
  		static def: allReferencedEntityTypeNames(): Set(String) =
  			SelectedEntity.allInstances()->collect(referencedEntityTypeName())->asSet()

endpackage