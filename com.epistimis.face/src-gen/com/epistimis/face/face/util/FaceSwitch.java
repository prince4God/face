/**
 * generated by Xtext 2.30.0
 * Copyright (c) 2022, 2023 Epistimis LLC (http://www.epistimis.com).
 */
package com.epistimis.face.face.util;

import com.epistimis.face.face.*;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see com.epistimis.face.face.FacePackage
 * @generated
 */
public class FaceSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static FacePackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FaceSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = FacePackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case FacePackage.ARCHITECTURE_MODEL:
      {
        ArchitectureModel architectureModel = (ArchitectureModel)theEObject;
        T result = caseArchitectureModel(architectureModel);
        if (result == null) result = caseFaceElement(architectureModel);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.FACE_ELEMENT:
      {
        FaceElement faceElement = (FaceElement)theEObject;
        T result = caseFaceElement(faceElement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.UOP_UO_PMODEL:
      {
        UopUoPModel uopUoPModel = (UopUoPModel)theEObject;
        T result = caseUopUoPModel(uopUoPModel);
        if (result == null) result = caseFaceElement(uopUoPModel);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.UOP_ELEMENT:
      {
        UopElement uopElement = (UopElement)theEObject;
        T result = caseUopElement(uopElement);
        if (result == null) result = caseFaceElement(uopElement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.UOP_SUPPORTING_COMPONENT:
      {
        UopSupportingComponent uopSupportingComponent = (UopSupportingComponent)theEObject;
        T result = caseUopSupportingComponent(uopSupportingComponent);
        if (result == null) result = caseUopElement(uopSupportingComponent);
        if (result == null) result = caseFaceElement(uopSupportingComponent);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.UOP_LANGUAGE_RUNTIME:
      {
        UopLanguageRuntime uopLanguageRuntime = (UopLanguageRuntime)theEObject;
        T result = caseUopLanguageRuntime(uopLanguageRuntime);
        if (result == null) result = caseUopSupportingComponent(uopLanguageRuntime);
        if (result == null) result = caseUopElement(uopLanguageRuntime);
        if (result == null) result = caseFaceElement(uopLanguageRuntime);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.UOP_COMPONENT_FRAMEWORK:
      {
        UopComponentFramework uopComponentFramework = (UopComponentFramework)theEObject;
        T result = caseUopComponentFramework(uopComponentFramework);
        if (result == null) result = caseUopSupportingComponent(uopComponentFramework);
        if (result == null) result = caseUopElement(uopComponentFramework);
        if (result == null) result = caseFaceElement(uopComponentFramework);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.UOP_ABSTRACT_UO_P:
      {
        UopAbstractUoP uopAbstractUoP = (UopAbstractUoP)theEObject;
        T result = caseUopAbstractUoP(uopAbstractUoP);
        if (result == null) result = caseUopElement(uopAbstractUoP);
        if (result == null) result = caseFaceElement(uopAbstractUoP);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.UOP_ABSTRACT_CONNECTION:
      {
        UopAbstractConnection uopAbstractConnection = (UopAbstractConnection)theEObject;
        T result = caseUopAbstractConnection(uopAbstractConnection);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.UOP_UNIT_OF_PORTABILITY:
      {
        UopUnitOfPortability uopUnitOfPortability = (UopUnitOfPortability)theEObject;
        T result = caseUopUnitOfPortability(uopUnitOfPortability);
        if (result == null) result = caseUopElement(uopUnitOfPortability);
        if (result == null) result = caseFaceElement(uopUnitOfPortability);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.UOP_PORTABLE_COMPONENT:
      {
        UopPortableComponent uopPortableComponent = (UopPortableComponent)theEObject;
        T result = caseUopPortableComponent(uopPortableComponent);
        if (result == null) result = caseUopUnitOfPortability(uopPortableComponent);
        if (result == null) result = caseUopElement(uopPortableComponent);
        if (result == null) result = caseFaceElement(uopPortableComponent);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.UOP_PLATFORM_SPECIFIC_COMPONENT:
      {
        UopPlatformSpecificComponent uopPlatformSpecificComponent = (UopPlatformSpecificComponent)theEObject;
        T result = caseUopPlatformSpecificComponent(uopPlatformSpecificComponent);
        if (result == null) result = caseUopUnitOfPortability(uopPlatformSpecificComponent);
        if (result == null) result = caseUopElement(uopPlatformSpecificComponent);
        if (result == null) result = caseFaceElement(uopPlatformSpecificComponent);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.UOP_THREAD:
      {
        UopThread uopThread = (UopThread)theEObject;
        T result = caseUopThread(uopThread);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.UOP_RAM_MEMORY_REQUIREMENTS:
      {
        UopRAMMemoryRequirements uopRAMMemoryRequirements = (UopRAMMemoryRequirements)theEObject;
        T result = caseUopRAMMemoryRequirements(uopRAMMemoryRequirements);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.UOP_CONNECTION:
      {
        UopConnection uopConnection = (UopConnection)theEObject;
        T result = caseUopConnection(uopConnection);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.UOP_CLIENT_SERVER_CONNECTION:
      {
        UopClientServerConnection uopClientServerConnection = (UopClientServerConnection)theEObject;
        T result = caseUopClientServerConnection(uopClientServerConnection);
        if (result == null) result = caseUopConnection(uopClientServerConnection);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.UOP_PUB_SUB_CONNECTION:
      {
        UopPubSubConnection uopPubSubConnection = (UopPubSubConnection)theEObject;
        T result = caseUopPubSubConnection(uopPubSubConnection);
        if (result == null) result = caseUopConnection(uopPubSubConnection);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.UOP_QUEUING_CONNECTION:
      {
        UopQueuingConnection uopQueuingConnection = (UopQueuingConnection)theEObject;
        T result = caseUopQueuingConnection(uopQueuingConnection);
        if (result == null) result = caseUopPubSubConnection(uopQueuingConnection);
        if (result == null) result = caseUopConnection(uopQueuingConnection);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.UOP_SINGLE_INSTANCE_MESSAGE_CONNECTION:
      {
        UopSingleInstanceMessageConnection uopSingleInstanceMessageConnection = (UopSingleInstanceMessageConnection)theEObject;
        T result = caseUopSingleInstanceMessageConnection(uopSingleInstanceMessageConnection);
        if (result == null) result = caseUopPubSubConnection(uopSingleInstanceMessageConnection);
        if (result == null) result = caseUopConnection(uopSingleInstanceMessageConnection);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.UOP_LIFE_CYCLE_MANAGEMENT_PORT:
      {
        UopLifeCycleManagementPort uopLifeCycleManagementPort = (UopLifeCycleManagementPort)theEObject;
        T result = caseUopLifeCycleManagementPort(uopLifeCycleManagementPort);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.UOP_MESSAGE_TYPE:
      {
        UopMessageType uopMessageType = (UopMessageType)theEObject;
        T result = caseUopMessageType(uopMessageType);
        if (result == null) result = caseUopElement(uopMessageType);
        if (result == null) result = caseFaceElement(uopMessageType);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.UOP_COMPOSITE_TEMPLATE:
      {
        UopCompositeTemplate uopCompositeTemplate = (UopCompositeTemplate)theEObject;
        T result = caseUopCompositeTemplate(uopCompositeTemplate);
        if (result == null) result = caseUopMessageType(uopCompositeTemplate);
        if (result == null) result = caseUopElement(uopCompositeTemplate);
        if (result == null) result = caseFaceElement(uopCompositeTemplate);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.UOP_TEMPLATE_COMPOSITION:
      {
        UopTemplateComposition uopTemplateComposition = (UopTemplateComposition)theEObject;
        T result = caseUopTemplateComposition(uopTemplateComposition);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.UOP_TEMPLATE:
      {
        UopTemplate uopTemplate = (UopTemplate)theEObject;
        T result = caseUopTemplate(uopTemplate);
        if (result == null) result = caseUopMessageType(uopTemplate);
        if (result == null) result = caseUopElement(uopTemplate);
        if (result == null) result = caseFaceElement(uopTemplate);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.INTEGRATION_INTEGRATION_MODEL:
      {
        IntegrationIntegrationModel integrationIntegrationModel = (IntegrationIntegrationModel)theEObject;
        T result = caseIntegrationIntegrationModel(integrationIntegrationModel);
        if (result == null) result = caseFaceElement(integrationIntegrationModel);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.INTEGRATION_ELEMENT:
      {
        IntegrationElement integrationElement = (IntegrationElement)theEObject;
        T result = caseIntegrationElement(integrationElement);
        if (result == null) result = caseFaceElement(integrationElement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.INTEGRATION_INTEGRATION_CONTEXT:
      {
        IntegrationIntegrationContext integrationIntegrationContext = (IntegrationIntegrationContext)theEObject;
        T result = caseIntegrationIntegrationContext(integrationIntegrationContext);
        if (result == null) result = caseIntegrationElement(integrationIntegrationContext);
        if (result == null) result = caseFaceElement(integrationIntegrationContext);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.INTEGRATION_TS_NODE_CONNECTION:
      {
        IntegrationTSNodeConnection integrationTSNodeConnection = (IntegrationTSNodeConnection)theEObject;
        T result = caseIntegrationTSNodeConnection(integrationTSNodeConnection);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.INTEGRATION_TS_NODE_PORT_BASE:
      {
        IntegrationTSNodePortBase integrationTSNodePortBase = (IntegrationTSNodePortBase)theEObject;
        T result = caseIntegrationTSNodePortBase(integrationTSNodePortBase);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.INTEGRATION_UO_PINSTANCE:
      {
        IntegrationUoPInstance integrationUoPInstance = (IntegrationUoPInstance)theEObject;
        T result = caseIntegrationUoPInstance(integrationUoPInstance);
        if (result == null) result = caseIntegrationElement(integrationUoPInstance);
        if (result == null) result = caseFaceElement(integrationUoPInstance);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.INTEGRATION_UO_PINPUT_END_POINT:
      {
        IntegrationUoPInputEndPoint integrationUoPInputEndPoint = (IntegrationUoPInputEndPoint)theEObject;
        T result = caseIntegrationUoPInputEndPoint(integrationUoPInputEndPoint);
        if (result == null) result = caseIntegrationTSNodePortBase(integrationUoPInputEndPoint);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.INTEGRATION_UO_POUTPUT_END_POINT:
      {
        IntegrationUoPOutputEndPoint integrationUoPOutputEndPoint = (IntegrationUoPOutputEndPoint)theEObject;
        T result = caseIntegrationUoPOutputEndPoint(integrationUoPOutputEndPoint);
        if (result == null) result = caseIntegrationTSNodePortBase(integrationUoPOutputEndPoint);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.INTEGRATION_TRANSPORT_NODE:
      {
        IntegrationTransportNode integrationTransportNode = (IntegrationTransportNode)theEObject;
        T result = caseIntegrationTransportNode(integrationTransportNode);
        if (result == null) result = caseFaceElement(integrationTransportNode);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.INTEGRATION_TS_NODE_INPUT_PORT:
      {
        IntegrationTSNodeInputPort integrationTSNodeInputPort = (IntegrationTSNodeInputPort)theEObject;
        T result = caseIntegrationTSNodeInputPort(integrationTSNodeInputPort);
        if (result == null) result = caseIntegrationTSNodePortBase(integrationTSNodeInputPort);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.INTEGRATION_TS_NODE_OUTPUT_PORT:
      {
        IntegrationTSNodeOutputPort integrationTSNodeOutputPort = (IntegrationTSNodeOutputPort)theEObject;
        T result = caseIntegrationTSNodeOutputPort(integrationTSNodeOutputPort);
        if (result == null) result = caseIntegrationTSNodePortBase(integrationTSNodeOutputPort);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.INTEGRATION_VIEW_AGGREGATION:
      {
        IntegrationViewAggregation integrationViewAggregation = (IntegrationViewAggregation)theEObject;
        T result = caseIntegrationViewAggregation(integrationViewAggregation);
        if (result == null) result = caseIntegrationTransportNode(integrationViewAggregation);
        if (result == null) result = caseFaceElement(integrationViewAggregation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.INTEGRATION_VIEW_FILTER:
      {
        IntegrationViewFilter integrationViewFilter = (IntegrationViewFilter)theEObject;
        T result = caseIntegrationViewFilter(integrationViewFilter);
        if (result == null) result = caseIntegrationTransportNode(integrationViewFilter);
        if (result == null) result = caseFaceElement(integrationViewFilter);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.INTEGRATION_VIEW_SOURCE:
      {
        IntegrationViewSource integrationViewSource = (IntegrationViewSource)theEObject;
        T result = caseIntegrationViewSource(integrationViewSource);
        if (result == null) result = caseIntegrationTransportNode(integrationViewSource);
        if (result == null) result = caseFaceElement(integrationViewSource);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.INTEGRATION_VIEW_SINK:
      {
        IntegrationViewSink integrationViewSink = (IntegrationViewSink)theEObject;
        T result = caseIntegrationViewSink(integrationViewSink);
        if (result == null) result = caseIntegrationTransportNode(integrationViewSink);
        if (result == null) result = caseFaceElement(integrationViewSink);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.INTEGRATION_VIEW_TRANSFORMATION:
      {
        IntegrationViewTransformation integrationViewTransformation = (IntegrationViewTransformation)theEObject;
        T result = caseIntegrationViewTransformation(integrationViewTransformation);
        if (result == null) result = caseIntegrationTransportNode(integrationViewTransformation);
        if (result == null) result = caseFaceElement(integrationViewTransformation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.INTEGRATION_VIEW_TRANSPORTER:
      {
        IntegrationViewTransporter integrationViewTransporter = (IntegrationViewTransporter)theEObject;
        T result = caseIntegrationViewTransporter(integrationViewTransporter);
        if (result == null) result = caseIntegrationTransportNode(integrationViewTransporter);
        if (result == null) result = caseFaceElement(integrationViewTransporter);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case FacePackage.INTEGRATION_TRANSPORT_CHANNEL:
      {
        IntegrationTransportChannel integrationTransportChannel = (IntegrationTransportChannel)theEObject;
        T result = caseIntegrationTransportChannel(integrationTransportChannel);
        if (result == null) result = caseIntegrationElement(integrationTransportChannel);
        if (result == null) result = caseFaceElement(integrationTransportChannel);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Architecture Model</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Architecture Model</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseArchitectureModel(ArchitectureModel object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Element</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Element</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseFaceElement(FaceElement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Uop Uo PModel</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Uop Uo PModel</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUopUoPModel(UopUoPModel object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Uop Element</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Uop Element</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUopElement(UopElement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Uop Supporting Component</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Uop Supporting Component</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUopSupportingComponent(UopSupportingComponent object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Uop Language Runtime</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Uop Language Runtime</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUopLanguageRuntime(UopLanguageRuntime object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Uop Component Framework</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Uop Component Framework</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUopComponentFramework(UopComponentFramework object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Uop Abstract Uo P</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Uop Abstract Uo P</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUopAbstractUoP(UopAbstractUoP object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Uop Abstract Connection</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Uop Abstract Connection</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUopAbstractConnection(UopAbstractConnection object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Uop Unit Of Portability</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Uop Unit Of Portability</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUopUnitOfPortability(UopUnitOfPortability object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Uop Portable Component</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Uop Portable Component</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUopPortableComponent(UopPortableComponent object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Uop Platform Specific Component</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Uop Platform Specific Component</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUopPlatformSpecificComponent(UopPlatformSpecificComponent object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Uop Thread</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Uop Thread</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUopThread(UopThread object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Uop RAM Memory Requirements</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Uop RAM Memory Requirements</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUopRAMMemoryRequirements(UopRAMMemoryRequirements object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Uop Connection</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Uop Connection</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUopConnection(UopConnection object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Uop Client Server Connection</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Uop Client Server Connection</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUopClientServerConnection(UopClientServerConnection object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Uop Pub Sub Connection</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Uop Pub Sub Connection</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUopPubSubConnection(UopPubSubConnection object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Uop Queuing Connection</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Uop Queuing Connection</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUopQueuingConnection(UopQueuingConnection object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Uop Single Instance Message Connection</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Uop Single Instance Message Connection</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUopSingleInstanceMessageConnection(UopSingleInstanceMessageConnection object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Uop Life Cycle Management Port</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Uop Life Cycle Management Port</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUopLifeCycleManagementPort(UopLifeCycleManagementPort object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Uop Message Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Uop Message Type</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUopMessageType(UopMessageType object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Uop Composite Template</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Uop Composite Template</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUopCompositeTemplate(UopCompositeTemplate object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Uop Template Composition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Uop Template Composition</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUopTemplateComposition(UopTemplateComposition object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Uop Template</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Uop Template</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseUopTemplate(UopTemplate object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Integration Integration Model</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Integration Integration Model</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIntegrationIntegrationModel(IntegrationIntegrationModel object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Integration Element</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Integration Element</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIntegrationElement(IntegrationElement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Integration Integration Context</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Integration Integration Context</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIntegrationIntegrationContext(IntegrationIntegrationContext object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Integration TS Node Connection</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Integration TS Node Connection</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIntegrationTSNodeConnection(IntegrationTSNodeConnection object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Integration TS Node Port Base</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Integration TS Node Port Base</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIntegrationTSNodePortBase(IntegrationTSNodePortBase object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Integration Uo PInstance</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Integration Uo PInstance</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIntegrationUoPInstance(IntegrationUoPInstance object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Integration Uo PInput End Point</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Integration Uo PInput End Point</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIntegrationUoPInputEndPoint(IntegrationUoPInputEndPoint object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Integration Uo POutput End Point</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Integration Uo POutput End Point</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIntegrationUoPOutputEndPoint(IntegrationUoPOutputEndPoint object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Integration Transport Node</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Integration Transport Node</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIntegrationTransportNode(IntegrationTransportNode object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Integration TS Node Input Port</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Integration TS Node Input Port</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIntegrationTSNodeInputPort(IntegrationTSNodeInputPort object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Integration TS Node Output Port</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Integration TS Node Output Port</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIntegrationTSNodeOutputPort(IntegrationTSNodeOutputPort object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Integration View Aggregation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Integration View Aggregation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIntegrationViewAggregation(IntegrationViewAggregation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Integration View Filter</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Integration View Filter</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIntegrationViewFilter(IntegrationViewFilter object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Integration View Source</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Integration View Source</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIntegrationViewSource(IntegrationViewSource object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Integration View Sink</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Integration View Sink</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIntegrationViewSink(IntegrationViewSink object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Integration View Transformation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Integration View Transformation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIntegrationViewTransformation(IntegrationViewTransformation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Integration View Transporter</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Integration View Transporter</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIntegrationViewTransporter(IntegrationViewTransporter object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Integration Transport Channel</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Integration Transport Channel</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIntegrationTransportChannel(IntegrationTransportChannel object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //FaceSwitch
