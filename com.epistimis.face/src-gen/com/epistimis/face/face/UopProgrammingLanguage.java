/**
 * generated by Xtext 2.30.0
 * Copyright (c) 2022, 2023 Epistimis LLC (http://www.epistimis.com).
 */
package com.epistimis.face.face;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.eclipse.emf.common.util.Enumerator;

/**
 * <!-- begin-user-doc -->
 * A representation of the literals of the enumeration '<em><b>Uop Programming Language</b></em>',
 * and utility methods for working with them.
 * <!-- end-user-doc -->
 * @see com.epistimis.face.face.FacePackage#getUopProgrammingLanguage()
 * @model
 * @generated
 */
public enum UopProgrammingLanguage implements Enumerator
{
  /**
   * The '<em><b>UNSPECIFIED</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #UNSPECIFIED_VALUE
   * @generated
   * @ordered
   */
  UNSPECIFIED(0, "UNSPECIFIED", "Unspecified"),

  /**
   * The '<em><b>C</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #C_VALUE
   * @generated
   * @ordered
   */
  C(1, "C", "C"),

  /**
   * The '<em><b>CPP</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #CPP_VALUE
   * @generated
   * @ordered
   */
  CPP(2, "CPP", "cpp"),

  /**
   * The '<em><b>JAVA</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #JAVA_VALUE
   * @generated
   * @ordered
   */
  JAVA(3, "JAVA", "Java"),

  /**
   * The '<em><b>ADA</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ADA_VALUE
   * @generated
   * @ordered
   */
  ADA(4, "ADA", "Ada"),

  /**
   * The '<em><b>GO</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #GO_VALUE
   * @generated
   * @ordered
   */
  GO(5, "GO", "Go"),

  /**
   * The '<em><b>JS</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #JS_VALUE
   * @generated
   * @ordered
   */
  JS(6, "JS", "Javascript"),

  /**
   * The '<em><b>PYTHON</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #PYTHON_VALUE
   * @generated
   * @ordered
   */
  PYTHON(7, "PYTHON", "Python"),

  /**
   * The '<em><b>RUST</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #RUST_VALUE
   * @generated
   * @ordered
   */
  RUST(8, "RUST", "Rust"),

  /**
   * The '<em><b>SCALA</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SCALA_VALUE
   * @generated
   * @ordered
   */
  SCALA(9, "SCALA", "Scala"),

  /**
   * The '<em><b>SQL</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SQL_VALUE
   * @generated
   * @ordered
   */
  SQL(10, "SQL", "SQL"),

  /**
   * The '<em><b>TS</b></em>' literal object.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #TS_VALUE
   * @generated
   * @ordered
   */
  TS(11, "TS", "Typescript");

  /**
   * The '<em><b>UNSPECIFIED</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #UNSPECIFIED
   * @model literal="Unspecified"
   * @generated
   * @ordered
   */
  public static final int UNSPECIFIED_VALUE = 0;

  /**
   * The '<em><b>C</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #C
   * @model
   * @generated
   * @ordered
   */
  public static final int C_VALUE = 1;

  /**
   * The '<em><b>CPP</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #CPP
   * @model literal="cpp"
   * @generated
   * @ordered
   */
  public static final int CPP_VALUE = 2;

  /**
   * The '<em><b>JAVA</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #JAVA
   * @model literal="Java"
   * @generated
   * @ordered
   */
  public static final int JAVA_VALUE = 3;

  /**
   * The '<em><b>ADA</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #ADA
   * @model literal="Ada"
   * @generated
   * @ordered
   */
  public static final int ADA_VALUE = 4;

  /**
   * The '<em><b>GO</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #GO
   * @model literal="Go"
   * @generated
   * @ordered
   */
  public static final int GO_VALUE = 5;

  /**
   * The '<em><b>JS</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #JS
   * @model literal="Javascript"
   * @generated
   * @ordered
   */
  public static final int JS_VALUE = 6;

  /**
   * The '<em><b>PYTHON</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #PYTHON
   * @model literal="Python"
   * @generated
   * @ordered
   */
  public static final int PYTHON_VALUE = 7;

  /**
   * The '<em><b>RUST</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #RUST
   * @model literal="Rust"
   * @generated
   * @ordered
   */
  public static final int RUST_VALUE = 8;

  /**
   * The '<em><b>SCALA</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SCALA
   * @model literal="Scala"
   * @generated
   * @ordered
   */
  public static final int SCALA_VALUE = 9;

  /**
   * The '<em><b>SQL</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #SQL
   * @model
   * @generated
   * @ordered
   */
  public static final int SQL_VALUE = 10;

  /**
   * The '<em><b>TS</b></em>' literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #TS
   * @model literal="Typescript"
   * @generated
   * @ordered
   */
  public static final int TS_VALUE = 11;

  /**
   * An array of all the '<em><b>Uop Programming Language</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static final UopProgrammingLanguage[] VALUES_ARRAY =
    new UopProgrammingLanguage[]
    {
      UNSPECIFIED,
      C,
      CPP,
      JAVA,
      ADA,
      GO,
      JS,
      PYTHON,
      RUST,
      SCALA,
      SQL,
      TS,
    };

  /**
   * A public read-only list of all the '<em><b>Uop Programming Language</b></em>' enumerators.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final List<UopProgrammingLanguage> VALUES = Collections.unmodifiableList(Arrays.asList(VALUES_ARRAY));

  /**
   * Returns the '<em><b>Uop Programming Language</b></em>' literal with the specified literal value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param literal the literal.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static UopProgrammingLanguage get(String literal)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      UopProgrammingLanguage result = VALUES_ARRAY[i];
      if (result.toString().equals(literal))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Uop Programming Language</b></em>' literal with the specified name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param name the name.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static UopProgrammingLanguage getByName(String name)
  {
    for (int i = 0; i < VALUES_ARRAY.length; ++i)
    {
      UopProgrammingLanguage result = VALUES_ARRAY[i];
      if (result.getName().equals(name))
      {
        return result;
      }
    }
    return null;
  }

  /**
   * Returns the '<em><b>Uop Programming Language</b></em>' literal with the specified integer value.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the integer value.
   * @return the matching enumerator or <code>null</code>.
   * @generated
   */
  public static UopProgrammingLanguage get(int value)
  {
    switch (value)
    {
      case UNSPECIFIED_VALUE: return UNSPECIFIED;
      case C_VALUE: return C;
      case CPP_VALUE: return CPP;
      case JAVA_VALUE: return JAVA;
      case ADA_VALUE: return ADA;
      case GO_VALUE: return GO;
      case JS_VALUE: return JS;
      case PYTHON_VALUE: return PYTHON;
      case RUST_VALUE: return RUST;
      case SCALA_VALUE: return SCALA;
      case SQL_VALUE: return SQL;
      case TS_VALUE: return TS;
    }
    return null;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final int value;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String name;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private final String literal;

  /**
   * Only this class can construct instances.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private UopProgrammingLanguage(int value, String name, String literal)
  {
    this.value = value;
    this.name = name;
    this.literal = literal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getLiteral()
  {
    return literal;
  }

  /**
   * Returns the literal value of the enumerator, which is its string representation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    return literal;
  }
  
} //UopProgrammingLanguage
