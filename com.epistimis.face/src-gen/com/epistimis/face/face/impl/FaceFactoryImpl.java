/**
 * generated by Xtext 2.30.0
 * Copyright (c) 2022, 2023 Epistimis LLC (http://www.epistimis.com).
 */
package com.epistimis.face.face.impl;

import com.epistimis.face.face.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EDataType;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class FaceFactoryImpl extends EFactoryImpl implements FaceFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static FaceFactory init()
  {
    try
    {
      FaceFactory theFaceFactory = (FaceFactory)EPackage.Registry.INSTANCE.getEFactory(FacePackage.eNS_URI);
      if (theFaceFactory != null)
      {
        return theFaceFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new FaceFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FaceFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case FacePackage.ARCHITECTURE_MODEL: return createArchitectureModel();
      case FacePackage.FACE_ELEMENT: return createFaceElement();
      case FacePackage.UOP_UO_PMODEL: return createUopUoPModel();
      case FacePackage.UOP_ELEMENT: return createUopElement();
      case FacePackage.UOP_SUPPORTING_COMPONENT: return createUopSupportingComponent();
      case FacePackage.UOP_LANGUAGE_RUNTIME: return createUopLanguageRuntime();
      case FacePackage.UOP_COMPONENT_FRAMEWORK: return createUopComponentFramework();
      case FacePackage.UOP_ABSTRACT_UO_P: return createUopAbstractUoP();
      case FacePackage.UOP_ABSTRACT_CONNECTION: return createUopAbstractConnection();
      case FacePackage.UOP_UNIT_OF_PORTABILITY: return createUopUnitOfPortability();
      case FacePackage.UOP_PORTABLE_COMPONENT: return createUopPortableComponent();
      case FacePackage.UOP_PLATFORM_SPECIFIC_COMPONENT: return createUopPlatformSpecificComponent();
      case FacePackage.UOP_THREAD: return createUopThread();
      case FacePackage.UOP_RAM_MEMORY_REQUIREMENTS: return createUopRAMMemoryRequirements();
      case FacePackage.UOP_CONNECTION: return createUopConnection();
      case FacePackage.UOP_CLIENT_SERVER_CONNECTION: return createUopClientServerConnection();
      case FacePackage.UOP_PUB_SUB_CONNECTION: return createUopPubSubConnection();
      case FacePackage.UOP_QUEUING_CONNECTION: return createUopQueuingConnection();
      case FacePackage.UOP_SINGLE_INSTANCE_MESSAGE_CONNECTION: return createUopSingleInstanceMessageConnection();
      case FacePackage.UOP_LIFE_CYCLE_MANAGEMENT_PORT: return createUopLifeCycleManagementPort();
      case FacePackage.UOP_MESSAGE_TYPE: return createUopMessageType();
      case FacePackage.UOP_COMPOSITE_TEMPLATE: return createUopCompositeTemplate();
      case FacePackage.UOP_TEMPLATE_COMPOSITION: return createUopTemplateComposition();
      case FacePackage.UOP_TEMPLATE: return createUopTemplate();
      case FacePackage.INTEGRATION_INTEGRATION_MODEL: return createIntegrationIntegrationModel();
      case FacePackage.INTEGRATION_ELEMENT: return createIntegrationElement();
      case FacePackage.INTEGRATION_INTEGRATION_CONTEXT: return createIntegrationIntegrationContext();
      case FacePackage.INTEGRATION_TS_NODE_CONNECTION: return createIntegrationTSNodeConnection();
      case FacePackage.INTEGRATION_TS_NODE_PORT_BASE: return createIntegrationTSNodePortBase();
      case FacePackage.INTEGRATION_UO_PINSTANCE: return createIntegrationUoPInstance();
      case FacePackage.INTEGRATION_UO_PINPUT_END_POINT: return createIntegrationUoPInputEndPoint();
      case FacePackage.INTEGRATION_UO_POUTPUT_END_POINT: return createIntegrationUoPOutputEndPoint();
      case FacePackage.INTEGRATION_TRANSPORT_NODE: return createIntegrationTransportNode();
      case FacePackage.INTEGRATION_TS_NODE_INPUT_PORT: return createIntegrationTSNodeInputPort();
      case FacePackage.INTEGRATION_TS_NODE_OUTPUT_PORT: return createIntegrationTSNodeOutputPort();
      case FacePackage.INTEGRATION_VIEW_AGGREGATION: return createIntegrationViewAggregation();
      case FacePackage.INTEGRATION_VIEW_FILTER: return createIntegrationViewFilter();
      case FacePackage.INTEGRATION_VIEW_SOURCE: return createIntegrationViewSource();
      case FacePackage.INTEGRATION_VIEW_SINK: return createIntegrationViewSink();
      case FacePackage.INTEGRATION_VIEW_TRANSFORMATION: return createIntegrationViewTransformation();
      case FacePackage.INTEGRATION_VIEW_TRANSPORTER: return createIntegrationViewTransporter();
      case FacePackage.INTEGRATION_TRANSPORT_CHANNEL: return createIntegrationTransportChannel();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object createFromString(EDataType eDataType, String initialValue)
  {
    switch (eDataType.getClassifierID())
    {
      case FacePackage.UO_PCLIENT_SERVER_ROLE:
        return createUoPClientServerRoleFromString(eDataType, initialValue);
      case FacePackage.UOP_FACE_PROFILE:
        return createUopFaceProfileFromString(eDataType, initialValue);
      case FacePackage.UOP_DESIGN_ASSURANCE_LEVEL:
        return createUopDesignAssuranceLevelFromString(eDataType, initialValue);
      case FacePackage.UOP_DESIGN_ASSURANCE_STANDARD:
        return createUopDesignAssuranceStandardFromString(eDataType, initialValue);
      case FacePackage.UOP_MESSAGE_EXCHANGE_TYPE:
        return createUopMessageExchangeTypeFromString(eDataType, initialValue);
      case FacePackage.UOP_PARTITION_TYPE:
        return createUopPartitionTypeFromString(eDataType, initialValue);
      case FacePackage.UOP_PROGRAMMING_LANGUAGE:
        return createUopProgrammingLanguageFromString(eDataType, initialValue);
      case FacePackage.UOP_SYNCHRONIZATION_STYLE:
        return createUopSynchronizationStyleFromString(eDataType, initialValue);
      case FacePackage.UOP_THREAD_TYPE:
        return createUopThreadTypeFromString(eDataType, initialValue);
      default:
        throw new IllegalArgumentException("The datatype '" + eDataType.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String convertToString(EDataType eDataType, Object instanceValue)
  {
    switch (eDataType.getClassifierID())
    {
      case FacePackage.UO_PCLIENT_SERVER_ROLE:
        return convertUoPClientServerRoleToString(eDataType, instanceValue);
      case FacePackage.UOP_FACE_PROFILE:
        return convertUopFaceProfileToString(eDataType, instanceValue);
      case FacePackage.UOP_DESIGN_ASSURANCE_LEVEL:
        return convertUopDesignAssuranceLevelToString(eDataType, instanceValue);
      case FacePackage.UOP_DESIGN_ASSURANCE_STANDARD:
        return convertUopDesignAssuranceStandardToString(eDataType, instanceValue);
      case FacePackage.UOP_MESSAGE_EXCHANGE_TYPE:
        return convertUopMessageExchangeTypeToString(eDataType, instanceValue);
      case FacePackage.UOP_PARTITION_TYPE:
        return convertUopPartitionTypeToString(eDataType, instanceValue);
      case FacePackage.UOP_PROGRAMMING_LANGUAGE:
        return convertUopProgrammingLanguageToString(eDataType, instanceValue);
      case FacePackage.UOP_SYNCHRONIZATION_STYLE:
        return convertUopSynchronizationStyleToString(eDataType, instanceValue);
      case FacePackage.UOP_THREAD_TYPE:
        return convertUopThreadTypeToString(eDataType, instanceValue);
      default:
        throw new IllegalArgumentException("The datatype '" + eDataType.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ArchitectureModel createArchitectureModel()
  {
    ArchitectureModelImpl architectureModel = new ArchitectureModelImpl();
    return architectureModel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FaceElement createFaceElement()
  {
    FaceElementImpl faceElement = new FaceElementImpl();
    return faceElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UopUoPModel createUopUoPModel()
  {
    UopUoPModelImpl uopUoPModel = new UopUoPModelImpl();
    return uopUoPModel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UopElement createUopElement()
  {
    UopElementImpl uopElement = new UopElementImpl();
    return uopElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UopSupportingComponent createUopSupportingComponent()
  {
    UopSupportingComponentImpl uopSupportingComponent = new UopSupportingComponentImpl();
    return uopSupportingComponent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UopLanguageRuntime createUopLanguageRuntime()
  {
    UopLanguageRuntimeImpl uopLanguageRuntime = new UopLanguageRuntimeImpl();
    return uopLanguageRuntime;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UopComponentFramework createUopComponentFramework()
  {
    UopComponentFrameworkImpl uopComponentFramework = new UopComponentFrameworkImpl();
    return uopComponentFramework;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UopAbstractUoP createUopAbstractUoP()
  {
    UopAbstractUoPImpl uopAbstractUoP = new UopAbstractUoPImpl();
    return uopAbstractUoP;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UopAbstractConnection createUopAbstractConnection()
  {
    UopAbstractConnectionImpl uopAbstractConnection = new UopAbstractConnectionImpl();
    return uopAbstractConnection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UopUnitOfPortability createUopUnitOfPortability()
  {
    UopUnitOfPortabilityImpl uopUnitOfPortability = new UopUnitOfPortabilityImpl();
    return uopUnitOfPortability;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UopPortableComponent createUopPortableComponent()
  {
    UopPortableComponentImpl uopPortableComponent = new UopPortableComponentImpl();
    return uopPortableComponent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UopPlatformSpecificComponent createUopPlatformSpecificComponent()
  {
    UopPlatformSpecificComponentImpl uopPlatformSpecificComponent = new UopPlatformSpecificComponentImpl();
    return uopPlatformSpecificComponent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UopThread createUopThread()
  {
    UopThreadImpl uopThread = new UopThreadImpl();
    return uopThread;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UopRAMMemoryRequirements createUopRAMMemoryRequirements()
  {
    UopRAMMemoryRequirementsImpl uopRAMMemoryRequirements = new UopRAMMemoryRequirementsImpl();
    return uopRAMMemoryRequirements;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UopConnection createUopConnection()
  {
    UopConnectionImpl uopConnection = new UopConnectionImpl();
    return uopConnection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UopClientServerConnection createUopClientServerConnection()
  {
    UopClientServerConnectionImpl uopClientServerConnection = new UopClientServerConnectionImpl();
    return uopClientServerConnection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UopPubSubConnection createUopPubSubConnection()
  {
    UopPubSubConnectionImpl uopPubSubConnection = new UopPubSubConnectionImpl();
    return uopPubSubConnection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UopQueuingConnection createUopQueuingConnection()
  {
    UopQueuingConnectionImpl uopQueuingConnection = new UopQueuingConnectionImpl();
    return uopQueuingConnection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UopSingleInstanceMessageConnection createUopSingleInstanceMessageConnection()
  {
    UopSingleInstanceMessageConnectionImpl uopSingleInstanceMessageConnection = new UopSingleInstanceMessageConnectionImpl();
    return uopSingleInstanceMessageConnection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UopLifeCycleManagementPort createUopLifeCycleManagementPort()
  {
    UopLifeCycleManagementPortImpl uopLifeCycleManagementPort = new UopLifeCycleManagementPortImpl();
    return uopLifeCycleManagementPort;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UopMessageType createUopMessageType()
  {
    UopMessageTypeImpl uopMessageType = new UopMessageTypeImpl();
    return uopMessageType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UopCompositeTemplate createUopCompositeTemplate()
  {
    UopCompositeTemplateImpl uopCompositeTemplate = new UopCompositeTemplateImpl();
    return uopCompositeTemplate;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UopTemplateComposition createUopTemplateComposition()
  {
    UopTemplateCompositionImpl uopTemplateComposition = new UopTemplateCompositionImpl();
    return uopTemplateComposition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UopTemplate createUopTemplate()
  {
    UopTemplateImpl uopTemplate = new UopTemplateImpl();
    return uopTemplate;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IntegrationIntegrationModel createIntegrationIntegrationModel()
  {
    IntegrationIntegrationModelImpl integrationIntegrationModel = new IntegrationIntegrationModelImpl();
    return integrationIntegrationModel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IntegrationElement createIntegrationElement()
  {
    IntegrationElementImpl integrationElement = new IntegrationElementImpl();
    return integrationElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IntegrationIntegrationContext createIntegrationIntegrationContext()
  {
    IntegrationIntegrationContextImpl integrationIntegrationContext = new IntegrationIntegrationContextImpl();
    return integrationIntegrationContext;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IntegrationTSNodeConnection createIntegrationTSNodeConnection()
  {
    IntegrationTSNodeConnectionImpl integrationTSNodeConnection = new IntegrationTSNodeConnectionImpl();
    return integrationTSNodeConnection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IntegrationTSNodePortBase createIntegrationTSNodePortBase()
  {
    IntegrationTSNodePortBaseImpl integrationTSNodePortBase = new IntegrationTSNodePortBaseImpl();
    return integrationTSNodePortBase;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IntegrationUoPInstance createIntegrationUoPInstance()
  {
    IntegrationUoPInstanceImpl integrationUoPInstance = new IntegrationUoPInstanceImpl();
    return integrationUoPInstance;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IntegrationUoPInputEndPoint createIntegrationUoPInputEndPoint()
  {
    IntegrationUoPInputEndPointImpl integrationUoPInputEndPoint = new IntegrationUoPInputEndPointImpl();
    return integrationUoPInputEndPoint;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IntegrationUoPOutputEndPoint createIntegrationUoPOutputEndPoint()
  {
    IntegrationUoPOutputEndPointImpl integrationUoPOutputEndPoint = new IntegrationUoPOutputEndPointImpl();
    return integrationUoPOutputEndPoint;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IntegrationTransportNode createIntegrationTransportNode()
  {
    IntegrationTransportNodeImpl integrationTransportNode = new IntegrationTransportNodeImpl();
    return integrationTransportNode;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IntegrationTSNodeInputPort createIntegrationTSNodeInputPort()
  {
    IntegrationTSNodeInputPortImpl integrationTSNodeInputPort = new IntegrationTSNodeInputPortImpl();
    return integrationTSNodeInputPort;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IntegrationTSNodeOutputPort createIntegrationTSNodeOutputPort()
  {
    IntegrationTSNodeOutputPortImpl integrationTSNodeOutputPort = new IntegrationTSNodeOutputPortImpl();
    return integrationTSNodeOutputPort;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IntegrationViewAggregation createIntegrationViewAggregation()
  {
    IntegrationViewAggregationImpl integrationViewAggregation = new IntegrationViewAggregationImpl();
    return integrationViewAggregation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IntegrationViewFilter createIntegrationViewFilter()
  {
    IntegrationViewFilterImpl integrationViewFilter = new IntegrationViewFilterImpl();
    return integrationViewFilter;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IntegrationViewSource createIntegrationViewSource()
  {
    IntegrationViewSourceImpl integrationViewSource = new IntegrationViewSourceImpl();
    return integrationViewSource;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IntegrationViewSink createIntegrationViewSink()
  {
    IntegrationViewSinkImpl integrationViewSink = new IntegrationViewSinkImpl();
    return integrationViewSink;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IntegrationViewTransformation createIntegrationViewTransformation()
  {
    IntegrationViewTransformationImpl integrationViewTransformation = new IntegrationViewTransformationImpl();
    return integrationViewTransformation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IntegrationViewTransporter createIntegrationViewTransporter()
  {
    IntegrationViewTransporterImpl integrationViewTransporter = new IntegrationViewTransporterImpl();
    return integrationViewTransporter;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IntegrationTransportChannel createIntegrationTransportChannel()
  {
    IntegrationTransportChannelImpl integrationTransportChannel = new IntegrationTransportChannelImpl();
    return integrationTransportChannel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public UoPClientServerRole createUoPClientServerRoleFromString(EDataType eDataType, String initialValue)
  {
    UoPClientServerRole result = UoPClientServerRole.get(initialValue);
    if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
    return result;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String convertUoPClientServerRoleToString(EDataType eDataType, Object instanceValue)
  {
    return instanceValue == null ? null : instanceValue.toString();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public UopFaceProfile createUopFaceProfileFromString(EDataType eDataType, String initialValue)
  {
    UopFaceProfile result = UopFaceProfile.get(initialValue);
    if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
    return result;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String convertUopFaceProfileToString(EDataType eDataType, Object instanceValue)
  {
    return instanceValue == null ? null : instanceValue.toString();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public UopDesignAssuranceLevel createUopDesignAssuranceLevelFromString(EDataType eDataType, String initialValue)
  {
    UopDesignAssuranceLevel result = UopDesignAssuranceLevel.get(initialValue);
    if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
    return result;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String convertUopDesignAssuranceLevelToString(EDataType eDataType, Object instanceValue)
  {
    return instanceValue == null ? null : instanceValue.toString();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public UopDesignAssuranceStandard createUopDesignAssuranceStandardFromString(EDataType eDataType, String initialValue)
  {
    UopDesignAssuranceStandard result = UopDesignAssuranceStandard.get(initialValue);
    if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
    return result;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String convertUopDesignAssuranceStandardToString(EDataType eDataType, Object instanceValue)
  {
    return instanceValue == null ? null : instanceValue.toString();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public UopMessageExchangeType createUopMessageExchangeTypeFromString(EDataType eDataType, String initialValue)
  {
    UopMessageExchangeType result = UopMessageExchangeType.get(initialValue);
    if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
    return result;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String convertUopMessageExchangeTypeToString(EDataType eDataType, Object instanceValue)
  {
    return instanceValue == null ? null : instanceValue.toString();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public UopPartitionType createUopPartitionTypeFromString(EDataType eDataType, String initialValue)
  {
    UopPartitionType result = UopPartitionType.get(initialValue);
    if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
    return result;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String convertUopPartitionTypeToString(EDataType eDataType, Object instanceValue)
  {
    return instanceValue == null ? null : instanceValue.toString();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public UopProgrammingLanguage createUopProgrammingLanguageFromString(EDataType eDataType, String initialValue)
  {
    UopProgrammingLanguage result = UopProgrammingLanguage.get(initialValue);
    if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
    return result;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String convertUopProgrammingLanguageToString(EDataType eDataType, Object instanceValue)
  {
    return instanceValue == null ? null : instanceValue.toString();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public UopSynchronizationStyle createUopSynchronizationStyleFromString(EDataType eDataType, String initialValue)
  {
    UopSynchronizationStyle result = UopSynchronizationStyle.get(initialValue);
    if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
    return result;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String convertUopSynchronizationStyleToString(EDataType eDataType, Object instanceValue)
  {
    return instanceValue == null ? null : instanceValue.toString();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public UopThreadType createUopThreadTypeFromString(EDataType eDataType, String initialValue)
  {
    UopThreadType result = UopThreadType.get(initialValue);
    if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
    return result;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String convertUopThreadTypeToString(EDataType eDataType, Object instanceValue)
  {
    return instanceValue == null ? null : instanceValue.toString();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FacePackage getFacePackage()
  {
    return (FacePackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static FacePackage getPackage()
  {
    return FacePackage.eINSTANCE;
  }

} //FaceFactoryImpl
