/**
 * generated by Xtext 2.30.0
 * Copyright (c) 2022, 2023 Epistimis LLC (http://www.epistimis.com).
 */
package com.epistimis.face.face.impl;

import com.epistimis.face.face.FacePackage;
import com.epistimis.face.face.UopAbstractConnection;

import com.epistimis.uddl.uddl.ConceptualView;
import com.epistimis.uddl.uddl.LogicalView;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Uop Abstract Connection</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.epistimis.face.face.impl.UopAbstractConnectionImpl#getName <em>Name</em>}</li>
 *   <li>{@link com.epistimis.face.face.impl.UopAbstractConnectionImpl#getDescription <em>Description</em>}</li>
 *   <li>{@link com.epistimis.face.face.impl.UopAbstractConnectionImpl#getConceptualView <em>Conceptual View</em>}</li>
 *   <li>{@link com.epistimis.face.face.impl.UopAbstractConnectionImpl#getLogicalView <em>Logical View</em>}</li>
 * </ul>
 *
 * @generated
 */
public class UopAbstractConnectionImpl extends MinimalEObjectImpl.Container implements UopAbstractConnection
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected static final String DESCRIPTION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected String description = DESCRIPTION_EDEFAULT;

  /**
   * The cached value of the '{@link #getConceptualView() <em>Conceptual View</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConceptualView()
   * @generated
   * @ordered
   */
  protected ConceptualView conceptualView;

  /**
   * The cached value of the '{@link #getLogicalView() <em>Logical View</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLogicalView()
   * @generated
   * @ordered
   */
  protected LogicalView logicalView;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected UopAbstractConnectionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return FacePackage.Literals.UOP_ABSTRACT_CONNECTION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FacePackage.UOP_ABSTRACT_CONNECTION__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDescription()
  {
    return description;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDescription(String newDescription)
  {
    String oldDescription = description;
    description = newDescription;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FacePackage.UOP_ABSTRACT_CONNECTION__DESCRIPTION, oldDescription, description));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ConceptualView getConceptualView()
  {
    if (conceptualView != null && conceptualView.eIsProxy())
    {
      InternalEObject oldConceptualView = (InternalEObject)conceptualView;
      conceptualView = (ConceptualView)eResolveProxy(oldConceptualView);
      if (conceptualView != oldConceptualView)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, FacePackage.UOP_ABSTRACT_CONNECTION__CONCEPTUAL_VIEW, oldConceptualView, conceptualView));
      }
    }
    return conceptualView;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ConceptualView basicGetConceptualView()
  {
    return conceptualView;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setConceptualView(ConceptualView newConceptualView)
  {
    ConceptualView oldConceptualView = conceptualView;
    conceptualView = newConceptualView;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FacePackage.UOP_ABSTRACT_CONNECTION__CONCEPTUAL_VIEW, oldConceptualView, conceptualView));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LogicalView getLogicalView()
  {
    if (logicalView != null && logicalView.eIsProxy())
    {
      InternalEObject oldLogicalView = (InternalEObject)logicalView;
      logicalView = (LogicalView)eResolveProxy(oldLogicalView);
      if (logicalView != oldLogicalView)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, FacePackage.UOP_ABSTRACT_CONNECTION__LOGICAL_VIEW, oldLogicalView, logicalView));
      }
    }
    return logicalView;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LogicalView basicGetLogicalView()
  {
    return logicalView;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLogicalView(LogicalView newLogicalView)
  {
    LogicalView oldLogicalView = logicalView;
    logicalView = newLogicalView;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, FacePackage.UOP_ABSTRACT_CONNECTION__LOGICAL_VIEW, oldLogicalView, logicalView));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case FacePackage.UOP_ABSTRACT_CONNECTION__NAME:
        return getName();
      case FacePackage.UOP_ABSTRACT_CONNECTION__DESCRIPTION:
        return getDescription();
      case FacePackage.UOP_ABSTRACT_CONNECTION__CONCEPTUAL_VIEW:
        if (resolve) return getConceptualView();
        return basicGetConceptualView();
      case FacePackage.UOP_ABSTRACT_CONNECTION__LOGICAL_VIEW:
        if (resolve) return getLogicalView();
        return basicGetLogicalView();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case FacePackage.UOP_ABSTRACT_CONNECTION__NAME:
        setName((String)newValue);
        return;
      case FacePackage.UOP_ABSTRACT_CONNECTION__DESCRIPTION:
        setDescription((String)newValue);
        return;
      case FacePackage.UOP_ABSTRACT_CONNECTION__CONCEPTUAL_VIEW:
        setConceptualView((ConceptualView)newValue);
        return;
      case FacePackage.UOP_ABSTRACT_CONNECTION__LOGICAL_VIEW:
        setLogicalView((LogicalView)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case FacePackage.UOP_ABSTRACT_CONNECTION__NAME:
        setName(NAME_EDEFAULT);
        return;
      case FacePackage.UOP_ABSTRACT_CONNECTION__DESCRIPTION:
        setDescription(DESCRIPTION_EDEFAULT);
        return;
      case FacePackage.UOP_ABSTRACT_CONNECTION__CONCEPTUAL_VIEW:
        setConceptualView((ConceptualView)null);
        return;
      case FacePackage.UOP_ABSTRACT_CONNECTION__LOGICAL_VIEW:
        setLogicalView((LogicalView)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case FacePackage.UOP_ABSTRACT_CONNECTION__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case FacePackage.UOP_ABSTRACT_CONNECTION__DESCRIPTION:
        return DESCRIPTION_EDEFAULT == null ? description != null : !DESCRIPTION_EDEFAULT.equals(description);
      case FacePackage.UOP_ABSTRACT_CONNECTION__CONCEPTUAL_VIEW:
        return conceptualView != null;
      case FacePackage.UOP_ABSTRACT_CONNECTION__LOGICAL_VIEW:
        return logicalView != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", description: ");
    result.append(description);
    result.append(')');
    return result.toString();
  }

} //UopAbstractConnectionImpl
