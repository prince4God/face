/**
 * generated by Xtext 2.30.0
 * Copyright (c) 2022, 2023 Epistimis LLC (http://www.epistimis.com).
 */
package com.epistimis.face.face.impl;

import com.epistimis.face.face.ArchitectureModel;
import com.epistimis.face.face.FacePackage;
import com.epistimis.face.face.IntegrationIntegrationModel;
import com.epistimis.face.face.UopUoPModel;

import com.epistimis.uddl.uddl.DataModel;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Architecture Model</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.epistimis.face.face.impl.ArchitectureModelImpl#getDm <em>Dm</em>}</li>
 *   <li>{@link com.epistimis.face.face.impl.ArchitectureModelImpl#getUm <em>Um</em>}</li>
 *   <li>{@link com.epistimis.face.face.impl.ArchitectureModelImpl#getIm <em>Im</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ArchitectureModelImpl extends FaceElementImpl implements ArchitectureModel
{
  /**
   * The cached value of the '{@link #getDm() <em>Dm</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDm()
   * @generated
   * @ordered
   */
  protected EList<DataModel> dm;

  /**
   * The cached value of the '{@link #getUm() <em>Um</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUm()
   * @generated
   * @ordered
   */
  protected EList<UopUoPModel> um;

  /**
   * The cached value of the '{@link #getIm() <em>Im</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIm()
   * @generated
   * @ordered
   */
  protected EList<IntegrationIntegrationModel> im;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ArchitectureModelImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return FacePackage.Literals.ARCHITECTURE_MODEL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<DataModel> getDm()
  {
    if (dm == null)
    {
      dm = new EObjectContainmentEList<DataModel>(DataModel.class, this, FacePackage.ARCHITECTURE_MODEL__DM);
    }
    return dm;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<UopUoPModel> getUm()
  {
    if (um == null)
    {
      um = new EObjectContainmentEList<UopUoPModel>(UopUoPModel.class, this, FacePackage.ARCHITECTURE_MODEL__UM);
    }
    return um;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<IntegrationIntegrationModel> getIm()
  {
    if (im == null)
    {
      im = new EObjectContainmentEList<IntegrationIntegrationModel>(IntegrationIntegrationModel.class, this, FacePackage.ARCHITECTURE_MODEL__IM);
    }
    return im;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case FacePackage.ARCHITECTURE_MODEL__DM:
        return ((InternalEList<?>)getDm()).basicRemove(otherEnd, msgs);
      case FacePackage.ARCHITECTURE_MODEL__UM:
        return ((InternalEList<?>)getUm()).basicRemove(otherEnd, msgs);
      case FacePackage.ARCHITECTURE_MODEL__IM:
        return ((InternalEList<?>)getIm()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case FacePackage.ARCHITECTURE_MODEL__DM:
        return getDm();
      case FacePackage.ARCHITECTURE_MODEL__UM:
        return getUm();
      case FacePackage.ARCHITECTURE_MODEL__IM:
        return getIm();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case FacePackage.ARCHITECTURE_MODEL__DM:
        getDm().clear();
        getDm().addAll((Collection<? extends DataModel>)newValue);
        return;
      case FacePackage.ARCHITECTURE_MODEL__UM:
        getUm().clear();
        getUm().addAll((Collection<? extends UopUoPModel>)newValue);
        return;
      case FacePackage.ARCHITECTURE_MODEL__IM:
        getIm().clear();
        getIm().addAll((Collection<? extends IntegrationIntegrationModel>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case FacePackage.ARCHITECTURE_MODEL__DM:
        getDm().clear();
        return;
      case FacePackage.ARCHITECTURE_MODEL__UM:
        getUm().clear();
        return;
      case FacePackage.ARCHITECTURE_MODEL__IM:
        getIm().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case FacePackage.ARCHITECTURE_MODEL__DM:
        return dm != null && !dm.isEmpty();
      case FacePackage.ARCHITECTURE_MODEL__UM:
        return um != null && !um.isEmpty();
      case FacePackage.ARCHITECTURE_MODEL__IM:
        return im != null && !im.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //ArchitectureModelImpl
